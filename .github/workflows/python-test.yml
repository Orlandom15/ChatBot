name: Python Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        if [ -f requirements-test.txt ]; then pip install -r requirements-test.txt; fi

    - name: Install test dependencies
      run: |
        pip install pytest pytest-cov pytest-mock bandit black flake8

    - name: Run security check
      run: |
        bandit -r app.py config/ -f html -o bandit-report.html || true

    - name: Run code formatting check
      run: |
        black --check app.py config/ tests/ || true

    - name: Run linting
      run: |
        flake8 app.py config/ tests/ --max-line-length=88 --count --statistics || true

    - name: Run tests with coverage
      run: |
        pytest tests/ -v --cov=app --cov-report=xml --cov-report=html

    - name: Upload test results
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ matrix.python-version }}
        path: |
          htmlcov/
          bandit-report.html
        retention-days: 30